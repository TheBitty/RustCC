name: Rust CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
    name: Test (Default Features)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - name: Build
        run: cd rustcc && cargo build --verbose
      - name: Run tests
        run: cd rustcc && cargo test --verbose

  # LLVM backend testing is temporarily disabled until a reliable setup can be established
  # Persistent issues with dependencies and compatibility are causing CI failures
  # test-llvm:
  #   name: Test (LLVM Backend)
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v3
  #     - name: Install LLVM and Clang dependencies
  #       run: |
  #         sudo apt-get update
  #         sudo apt-add-repository 'deb http://apt.llvm.org/noble/ llvm-toolchain-noble-16 main'
  #         sudo apt-get update
  #         sudo apt-get install -y llvm-16-dev libpolly-16-dev
  #         # If specific version doesn't work, try installing the whole LLVM package
  #         if [ $? -ne 0 ]; then
  #           sudo apt-get install -y llvm-16 llvm-16-dev
  #         fi
  #     - name: Set up Rust
  #       uses: actions-rs/toolchain@v1
  #       with:
  #         profile: minimal
  #         toolchain: stable
  #         override: true
  #     - name: Build with LLVM backend
  #       run: cd rustcc && cargo build --verbose --features llvm-backend
  #     - name: Run tests with LLVM backend
  #       run: cd rustcc && cargo test --verbose --features llvm-backend

  lints:
    name: Lints
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
          components: rustfmt, clippy
      - name: Run rustfmt
        run: cd rustcc && cargo fmt -- --check
      - name: Run clippy
        run: cd rustcc && cargo clippy -- -D warnings

  coverage:
    name: Code coverage
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Install stable toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Run cargo-tarpaulin
        uses: actions-rs/tarpaulin@v0.1
        with:
          args: '--workspace --ignore-tests --out Xml --timeout 120 --root rustcc'
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1 